name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #- name: Run ESLint (Code Analysis)
     # run: npm run lint  # Replace with your code analysis command
      #continue-on-error: false  # Allow the workflow to continue even if code analysis fails
    - name: Build the Docker image
      run: docker buildx build . --file Dockerfile --tag sureshsss/java-docker-build-tutorial:latest
    - name: Login to Docker Hub
      run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
    - name: Push Docker image to Docker Hub
      run: |
        docker tag sureshsss/java-docker-build-tutorial:latest sureshsss/java-docker-build-tutorial:${GITHUB_RUN_ID}
        docker push sureshsss/java-docker-build-tutorial:${GITHUB_RUN_ID}
    #- name: Deploy to OpenShift
    # run: |
    #    oc login --server=<OpenShift Server URL> --token=${{ secrets.OPENSHIFT_API_TOKEN }}
    #    oc project <OpenShift Project Name>
    #    oc set image deployment/<Deployment Name> <Container Name>=sureshsss/java-docker-build-tutorial:${GITHUB_RUN_ID}
